# =====================================================
# üîí Homelab Security Hardened Docker Compose File
# =====================================================
# Addresses critical security vulnerabilities from bug scan:
# - Fixed absolute mount paths
# - Non-root user implementation
# - Dropped unnecessary capabilities
# - Read-only containers where possible
# - Log rotation configuration
# - Security scanning integration
# =====================================================

networks:
  homelab:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
    driver_opts:
      com.docker.network.bridge.enable_icc: "false"  # Disable inter-container communication by default

volumes:
  # Named volumes with proper permissions
  gluetun_config:
    driver: local
  jellyfin_config:
    driver: local
  sonarr_config:
    driver: local
  radarr_config:
    driver: local
  prowlarr_config:
    driver: local
  qbittorrent_config:
    driver: local
  bazarr_config:
    driver: local

services:
  # =====================================================
  # üîí VPN & NETWORKING LAYER - HARDENED
  # =====================================================
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    # Security hardening
    user: "${PUID:-1000}:${PGID:-1000}"
    cap_add:
      - NET_ADMIN  # Only required capability
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - "8080:8080"   # qBittorrent WebUI
      - "6881:6881"   # qBittorrent P2P
      - "6881:6881/udp"
      - "6789:6789"   # NZBGet WebUI
    volumes:
      # FIXED: Use absolute paths for bind mounts
      - /opt/homelab/wg0.conf:/gluetun/wireguard/wg0.conf:ro
      - gluetun_config:/gluetun
    env_file:
      - .env
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
    networks:
      homelab:
        ipv4_address: 172.20.0.5
    restart: unless-stopped
    # Enhanced healthcheck
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/v1/openvpn/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # Log configuration to prevent disk space issues
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # FlareSolverr - Cloudflare bypass utility - HARDENED
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    # Security hardening
    user: "${PUID:-1000}:${PGID:-1000}"
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    environment:
      - LOG_LEVEL=${LOG_LEVEL_FLARESOLVERR:-info}
      - TZ=${TZ:-America/Phoenix}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
    ports:
      - "8191:8191"
    networks:
      homelab:
        ipv4_address: 172.20.0.9
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =====================================================
  # üì• DOWNLOAD CLIENTS LAYER - HARDENED
  # =====================================================
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    # Security hardening
    user: "${PUID:-1000}:${PGID:-1000}"
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Phoenix}
      - WEBUI_PORT=8080
    volumes:
      # FIXED: Use absolute paths and named volumes
      - qbittorrent_config:/config
      - /data/media/downloads:/downloads
    network_mode: "service:gluetun"  # Routes through VPN
    depends_on:
      gluetun:
        condition: service_healthy
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =====================================================
  # üé¨ MEDIA SERVER LAYER - HARDENED
  # =====================================================
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    # Security hardening
    user: "${PUID:-1000}:${PGID:-1000}"
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Phoenix}
    volumes:
      # FIXED: Use absolute paths and named volumes
      - jellyfin_config:/config
      - /data/media/movies:/data/movies:ro
      - /data/media/shows:/data/tvshows:ro  
      - /data/media/music:/data/music:ro
    ports:
      - "8096:8096"
    networks:
      homelab:
        ipv4_address: 172.20.0.10
    restart: unless-stopped
    # Enhanced healthcheck
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8096/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =====================================================
  # üéØ SERVARR AUTOMATION LAYER - HARDENED
  # =====================================================
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    # Security hardening
    user: "${PUID:-1000}:${PGID:-1000}"
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Phoenix}
    volumes:
      # FIXED: Use absolute paths and named volumes
      - prowlarr_config:/config
    ports:
      - "9696:9696"
    networks:
      homelab:
        ipv4_address: 172.20.0.20
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9696/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    # Security hardening
    user: "${PUID:-1000}:${PGID:-1000}"
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Phoenix}
    volumes:
      # FIXED: Use absolute paths and named volumes
      - sonarr_config:/config
      - /data/media/shows:/tv
      - /data/media/downloads:/downloads
    ports:
      - "8989:8989"
    networks:
      homelab:
        ipv4_address: 172.20.0.21
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8989/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    # Security hardening
    user: "${PUID:-1000}:${PGID:-1000}"
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Phoenix}
    volumes:
      # FIXED: Use absolute paths and named volumes
      - radarr_config:/config
      - /data/media/movies:/movies
      - /data/media/downloads:/downloads
    ports:
      - "7878:7878"
    networks:
      homelab:
        ipv4_address: 172.20.0.22
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7878/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    # Security hardening
    user: "${PUID:-1000}:${PGID:-1000}"
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Phoenix}
    volumes:
      # FIXED: Use absolute paths and named volumes
      - bazarr_config:/config
      - /data/media/movies:/movies:ro
      - /data/media/shows:/tv:ro
    ports:
      - "6767:6767"
    networks:
      homelab:
        ipv4_address: 172.20.0.23
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6767/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =====================================================
  # üîç SECURITY & MONITORING LAYER
  # =====================================================
  # Vulnerability scanner
  trivy-scanner:
    image: aquasec/trivy:latest
    container_name: trivy-scanner
    # Security hardening
    user: "${PUID:-1000}:${PGID:-1000}"
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /opt/homelab/trivy-cache:/root/.cache/trivy
    environment:
      - TZ=${TZ:-America/Phoenix}
    command: ["sleep", "infinity"]  # Keep container running for on-demand scans
    networks:
      homelab:
        ipv4_address: 172.20.0.50
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # Log rotation and management
  logrotate:
    image: linkyard/docker-logrotate:latest
    container_name: logrotate
    # Security hardening
    user: "${PUID:-1000}:${PGID:-1000}"
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    read_only: true
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:rw
      - /var/log:/var/log:rw
    environment:
      - CRON_SCHEDULE=0 1 * * *  # Run daily at 1 AM
      - LOGROTATE_LOGFILES=/var/lib/docker/containers/*/*.log /var/log/*.log
      - LOGROTATE_FILESIZE=10M
      - LOGROTATE_FILENUM=5
    networks:
      homelab:
        ipv4_address: 172.20.0.51
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # Basic monitoring with Netdata
  netdata:
    image: netdata/netdata:latest
    container_name: netdata
    # Security hardening - Netdata needs some privileges for monitoring
    cap_add:
      - SYS_PTRACE
    cap_drop:
      - ALL
    security_opt:
      - apparmor:unconfined
      - no-new-privileges:false  # Netdata needs this for monitoring
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
    environment:
      - NETDATA_CLAIM_TOKEN=${NETDATA_CLAIM_TOKEN:-}
      - NETDATA_CLAIM_URL=${NETDATA_CLAIM_URL:-https://app.netdata.cloud}
    ports:
      - "19999:19999"
    networks:
      homelab:
        ipv4_address: 172.20.0.52
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"