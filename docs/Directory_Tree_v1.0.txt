# 🗂️ Homelab-SHV Directory Structure

Complete filesystem layout for the Homelab-SHV deployment.

## 📁 Root Directory Structure

```
homelab-deployment/
├── homelab.sh                  # Master control script
├── deploy_homelab.sh          # Deployment script
├── teardown_homelab.sh        # Teardown script  
├── reset_homelab.sh           # Reset script
├── status_homelab.sh          # Status check script
├── README.md                  # Main documentation
├── changelog.md               # Version history
├── .gitignore                 # Git ignore rules
│
├── deployment/                # Docker deployment files
│   ├── docker-compose.yml     # Main service stack
│   ├── .env.example          # Environment template
│   ├── .env                  # Environment secrets (not in git)
│   ├── wg0.conf.example      # VPN config template
│   ├── wg0.conf              # VPN config (not in git)
│   ├── bootstrap.sh          # System preparation
│   ├── README_START_HERE.md  # Quick start guide
│   ├── TROUBLESHOOTING.md    # Issue resolution
│   └── DEPLOYMENT_CHECKLIST.md # Pre-deploy verification
│
├── scripts/                   # Utility and automation scripts
│   ├── backup/
│   │   ├── restic_backup_with_alerts.sh    # Automated backups
│   │   └── daily_backup_summary.sh         # Backup reporting
│   ├── monitoring/
│   │   ├── hdd_health_check.sh             # Disk health monitoring
│   │   ├── weekly_system_health.sh         # System health reports
│   │   └── maintenance_dashboard.sh        # Daily maintenance
│   └── docs/
│       └── Homelab_Documentation_Archiver.sh # Doc archiving
│
├── docs/                      # Comprehensive documentation
│   ├── Documentation_Master.md              # Documentation index
│   ├── Directory_Tree_v1.0.txt             # This file
│   ├── System_Architecture.md               # System design
│   ├── Network_Plan.md                     # Network topology
│   ├── Storage_Layout.md                   # Storage design
│   ├── Docker_Stack_Reference.md           # Container reference
│   ├── Service_Configuration.md            # Service setup
│   ├── Health_Monitoring.md                # Monitoring setup
│   ├── Backup_Strategy.md                  # Backup procedures
│   ├── YouTube_Automation.md               # YouTube integration
│   ├── Servarr_Setup.md                   # Servarr configuration
│   ├── Notification_System.md             # Alert system
│   ├── Security_Guide.md                  # Security measures
│   ├── VPN_Setup.md                       # VPN configuration
│   ├── Lifecycle_Management.md            # Operations guide
│   └── Performance_Tuning.md              # Optimization
│
└── automation/                # Automation configurations
    └── jellyfin-youtube/      # YouTube automation
        ├── config/
        │   ├── config.yml              # Main configuration
        │   ├── creators.yaml           # Creator subscriptions
        │   └── jellyfin_youtube.yaml   # Jellyfin integration
        └── scripts/
            ├── smart_incremental_updater.py  # Update automation
            ├── consistency_audit.py          # Data validation
            ├── validate_sync.py              # Sync verification
            ├── auto_fix.py                   # Automated fixes
            └── requirements.txt              # Python dependencies
```

## 💾 Data Directory Structure (/data)

```
/data/
├── docker/                    # Container persistent data
│   ├── gluetun/              # VPN container config
│   ├── qbittorrent/          # Download client data
│   ├── nzbget/               # Usenet client data
│   ├── sonarr/               # TV show manager
│   ├── radarr/               # Movie manager
│   ├── bazarr/               # Subtitle manager
│   ├── prowlarr/             # Indexer manager
│   ├── recyclarr/            # Quality profile manager
│   ├── jellyfin/             # Media server data
│   ├── jellyseerr/           # Request manager
│   ├── jellystat/            # Analytics data
│   ├── jellystat-db/         # Database files
│   ├── ytdl-sub/             # YouTube downloader config
│   ├── tunarr/               # Channel manager
│   ├── suggestarr/           # Request suggestions
│   └── flaresolverr/         # Cloudflare solver
│
├── media/                     # Media library files
│   ├── movies/               # Movie files (.mkv, .mp4)
│   ├── shows/                # TV show files
│   │   └── [Show Name]/
│   │       └── Season ##/
│   │           └── episodes
│   ├── music/                # Music library
│   │   └── [Artist]/
│   │       └── [Album]/
│   └── youtube/              # YouTube content
│       ├── channels/         # Channel-based organization
│       ├── playlists/        # Playlist downloads
│       └── music/            # YouTube music
│
├── backups/                   # Backup storage
│   ├── restic/               # Restic repository
│   ├── docs/                 # Documentation archives
│   ├── configs/              # Configuration backups
│   └── database/             # Database dumps
│
└── logs/                      # Application logs
    ├── containers/           # Container-specific logs
    ├── backups/              # Backup operation logs
    └── monitoring/           # Health check logs
```

## 🔧 System Directories

```
/usr/local/bin/               # Installed scripts
├── restic_backup_with_alerts.sh
├── daily_backup_summary.sh
├── hdd_health_check.sh
├── weekly_system_health.sh
├── maintenance_dashboard.sh
└── Homelab_Documentation_Archiver.sh

/var/log/homelab-shv/         # System logs
├── restic_backup.log
├── daily_backup_summary.log
├── hdd_health.log
├── weekly_health.log
├── maintenance_dashboard.log
└── docs_archive.log

/etc/cron.d/                  # Scheduled tasks (if using system cron)
└── homelab-shv

/usr/local/etc/homelab-shv/   # System configuration
└── config.env               # Global environment config
```

## 🌐 Network Layout

```
Docker Network: homelab (172.20.0.0/16)
├── gluetun           172.20.0.2   # VPN gateway
├── qbittorrent       (via gluetun) # Download client
├── nzbget            172.20.0.4   # Usenet client
├── sonarr            172.20.0.5   # TV manager
├── radarr            172.20.0.6   # Movie manager
├── bazarr            172.20.0.7   # Subtitle manager
├── prowlarr          172.20.0.8   # Indexer manager
├── recyclarr         172.20.0.9   # Quality manager
├── jellyfin          172.20.0.10  # Media server
├── jellyseerr        172.20.0.11  # Request manager
├── jellystat         172.20.0.12  # Analytics
├── jellystat-db      172.20.0.13  # Database
├── ytdl-sub          172.20.0.14  # YouTube downloader
├── jellyfin-youtube  172.20.0.15  # YouTube automation
├── flaresolverr      172.20.0.16  # Cloudflare solver
├── tunarr            172.20.0.17  # Channel manager
└── suggestarr        172.20.0.18  # Suggestions
```

## 📊 Port Mappings

| Service | Internal Port | External Port | Description |
|---------|---------------|---------------|-------------|
| Jellyfin | 8096 | 8096 | Media server web UI |
| Sonarr | 8989 | 8989 | TV show management |
| Radarr | 7878 | 7878 | Movie management |
| Prowlarr | 9696 | 9696 | Indexer management |
| Bazarr | 6767 | 6767 | Subtitle management |
| Jellyseerr | 5055 | 5055 | Request management |
| Jellystat | 3000 | 3000 | Media analytics |
| qBittorrent | 8080 | 8080 | Download client (via VPN) |
| NZBGet | 6789 | 6789 | Usenet client |
| Flaresolverr | 8191 | 8191 | Cloudflare solver |
| Tunarr | 8000 | 8000 | Channel manager |
| Suggestarr | 5000 | 5000 | Request suggestions |

## 🔍 File Types & Extensions

### Video Files
- **Movies**: `.mkv`, `.mp4`, `.avi`, `.m4v`
- **TV Shows**: `.mkv`, `.mp4`, `.avi`, `.m4v`
- **YouTube**: `.mp4`, `.webm`, `.mkv`

### Audio Files
- **Music**: `.flac`, `.mp3`, `.m4a`, `.ogg`
- **YouTube Audio**: `.mp3`, `.m4a`, `.opus`

### Subtitle Files
- **Subtitles**: `.srt`, `.ass`, `.vtt`, `.sub`

### Configuration Files
- **Docker**: `.yml`, `.yaml`, `.env`
- **Application**: `.json`, `.xml`, `.conf`, `.ini`
- **Scripts**: `.sh`, `.py`, `.js`

## 🏷️ Naming Conventions

### Media Files
- **Movies**: `Movie Title (Year) {quality-source}.ext`
- **TV Shows**: `Show Name - S##E## - Episode Title {quality-source}.ext`
- **YouTube**: `[Channel] - Video Title [VideoID].ext`

### Directories
- **Shows**: `Show Name (Year)`
- **Movies**: `Movie Title (Year)`
- **YouTube Channels**: `Channel Name [ChannelID]`

---

**Last Updated**: 2025-10-11  
**Version**: 1.0  
**Maintainer**: J35867U (mrnash404@protonmail.com)